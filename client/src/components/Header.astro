---
import { SignIn, SignOut } from "auth-astro/components";
import { getSession } from "auth-astro/server";
const session = await getSession(Astro.request);
---

<header>
  <header>
    <div class="header-container">
      <div class="main-header">
        <a href="/" class="logo">
          <img src="/images/header/icono.png" alt="QUILLA's BAKERY" />
        </a>
        <nav>
          <ul>
            <li><a href="/productos">Productos</a></li>
            <li><a href="#contact-section">Contáctenos</a></li>
            <li>
              {
                !session ? (
                  <a href="#" class="login-button" id="login-button">
                    Iniciar sesión
                  </a>
                ) : (
                  <div class="user-menu-container">
                    <div class="user-info-container">
                      <img
                        src={session.user?.image}
                        alt="Perfil"
                        class="user-image"
                        id="user-menu-toggle"
                      />
                      <div class="user-name">
                        {session.user && session.user.name ? `${session.user.name.split(' ')[0]} ${session.user.name.split(' ')[1]?.charAt(0)}.` : ''}
                      </div>
                    </div>
                    <div id="user-menu" class="user-menu">
                      <SignOut class="user-menu-item signout-button">
                        Cerrar sesión
                      </SignOut>
                    </div>
                  </div>
                )
              }
            </li>
          </ul>
        </nav>
      </div>
    </div>
  </header>
  
  {
    !session && (
      <div id="login-modal" class="modal">
        <div class="modal-content">
          <span class="close">&times;</span>
          <div class="form-container">
            <p class="title">Iniciar sesión</p>
            <form id="login-form" class="form">
              <input type="email" class="input" placeholder="Email" name="email" required>
              <input type="password" class="input" placeholder="Password" name="password" required>
              <button type="submit" class="form-btn">Iniciar sesión</button>
            </form>
            <div class="buttons-container">
              <SignIn provider="google" class="login-button google-login-button">
                <svg
                  stroke="currentColor"
                  fill="currentColor"
                  stroke-width="0"
                  version="1.1"
                  x="0px"
                  y="0px"
                  class="google-icon"
                  viewBox="0 0 48 48"
                  height="1em"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    fill="#FFC107"
                    d="M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12
                    c0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24
                    c0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z"
                  />
                  <path
                    fill="#FF3D00"
                    d="M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657
                    C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z"
                  />
                  <path
                    fill="#4CAF50"
                    d="M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36
                    c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z"
                  />
                  <path
                    fill="#1976D2"
                    d="M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571
                    c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z"
                  />
                </svg>
                <span>Iniciar sesión con Google</span>
              </SignIn>
            </div>
            <p class="sign-up-label">
              No tienes una cuenta? <span class="sign-up-link" id="sign-up-link">Crear una cuenta</span>
            </p>
          </div>
        </div>
      </div>
    )
  }

<style>
  /* Estilos generales */
body {
  font-family: "Montserrat", sans-serif;
  margin: 0;
  padding: 0;
  background-color: #310e11;
  color: #f7f3e9;
}

.header-container {
  width: 100%;
}

.main-header {
  background-color: #ebf7f1;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 2rem;
}

.logo {
  display: inline-block;
}

.logo img {
  height: 82px;
  margin-left: 20px;
}

nav ul {
  list-style-type: none;
  display: flex;
  margin: 0;
  padding: 0;
  align-items: center;
}

nav ul li {
  margin: 0 1rem;
  padding: 0;
}

nav ul li a,
nav ul li .login-button {
  display: flex;
  align-items: center;
  padding: 0.5rem 1rem;
  color: #310e11;
  text-decoration: none;
  font-size: 1rem;
}

nav ul li a.login-button,
nav ul li .login-button {
  background-color: #6e3338;
  color: #ebf7f1;
  border-radius: 5px;
  text-decoration: none;
  transition: background-color 0.3s ease;
}

nav ul li a.login-button:hover,
nav ul li .login-button:hover {
  background-color: #c59a25d7;
}

.user-menu-container {
  position: relative;
  display: inline-block;
  text-align: center;
}

.user-info-container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.user-image {
  border-radius: 50%;
  width: 40px;
  height: 40px;
  cursor: pointer;
}

.user-name {
  margin-top: 5px;
  font-size: 0.9rem;
  color: #310e11;
  text-align: center;
}

.user-menu {
  display: none;
  position: absolute;
  right: 0;
  background-color: white;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  z-index: 1;
  border-radius: 5px;
  padding: 10px;
}

.user-menu-item {
  padding: 10px;
  cursor: pointer;
  color: black;
  text-decoration: none;
  display: block;
  border-radius: 5px;
}

.user-menu-item:hover {
  background-color: #f1f1f1;
}

#user-menu-toggle:hover + .user-menu,
#user-menu-toggle:focus + .user-menu,
#user-menu:hover,
#user-menu:focus {
  display: block;
}

#login-modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
  background-color: #fff;
  margin: 5% auto;
  padding: 20px;
  border-radius: 10px;
  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
  width: 350px;
  max-width: 90%;
  animation: fadeIn 0.5s ease;
}

.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
  cursor: pointer;
  transition: color 0.3s ease;
}

.close:hover,
.close:focus {
  color: #000;
}

.form-container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.title {
  text-align: center;
  font-family: "Montserrat", sans-serif;
  margin: 10px 0 10px 0;
  font-size: 28px;
  font-weight: 800;
  color: #6e3338;
}

.form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  width: 100%;
}

.input {
  padding: 0.75rem;
  font-size: 1rem;
  border: 1px solid #1b1010;
  border-radius: 5px;
  width: 100%;
  box-sizing: border-box;
  color: #310e11;
}

.form-btn {
  padding: 0.75rem;
  font-size: 1rem;
  border: none;
  border-radius: 5px;
  background-color: #6e3338;
  color: #fff;
  cursor: pointer;
  transition: background-color 0.3s ease;
  width: 100%;
  box-sizing: border-box;
}

.form-btn:hover {
  background-color: #310e11;
}

.page-link {
  text-align: right;
  width: 100%;
  margin: 0;
}

.page-link-label {
  color: #6e3338;
  cursor: pointer;
  text-decoration: underline;
}

.buttons-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 15px;
  margin-top: 1rem;
}

.login-button {
  display: flex;
  align-items: center;
  padding: 0.5rem 1rem;
  font-size: 1rem;
  border: none;
  border-radius: 5px;
  background-color: #fff;
  color: #310e11;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.google-login-button {
  border: 2px solid #747474;
  color: rgb(12, 13, 13);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.75rem;
  gap: 0.5rem;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.google-login-button:hover {
  background-color: #f5f5f5;
}

.apple-login-button {
  border: 2px solid #747474;
  color: rgb(12, 13, 13);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.75rem;
  gap: 0.5rem;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.apple-login-button:hover {
  background-color: #f5f5f5;
}

.google-icon,
.apple-icon {
  width: 24px;
  height: 24px;
}

.sign-up-label {
  text-align: center;
  margin-top: 1rem;
  color: #310e11;
}

.sign-up-link {
  color: #6e3338;
  cursor: pointer;
}

.sign-up-link:hover {
  color: #310e11;
  text-decoration: underline;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@media (min-width: 769px) {
  nav ul li {
    margin: 0 3rem;
  }
}

@media (max-width: 768px) {
  .main-header {
    flex-direction: column;
    align-items: center;
  }

  .logo {
    margin-bottom: 1rem;
  }

  nav ul {
    flex-direction: row;
    width: 100%;
    justify-content: center;
    text-align: center;
  }

  nav ul li {
    margin: 0.5rem 1rem;
  }

  .logo img {
    height: 60px;
  }
}

@media (max-width: 480px) {
  .main-header {
    padding: 1rem;
  }

  nav ul li {
    margin: 0.3rem 1rem;
  }

  nav ul li a,
  nav ul li .login-button {
    font-size: 0.9rem;
    padding: 0.5rem;
  }

  .user-name {
    font-size: 0.9rem;
  }
}

</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
  const userMenuToggle = document.getElementById("user-menu-toggle");
  const userMenu = document.getElementById("user-menu");

  if (userMenuToggle) {
    userMenuToggle.onclick = () => {
      if (userMenu) {
        userMenu.style.display =
          userMenu.style.display === "block" ? "none" : "block";
      }
    };
  }

  window.onclick = (event) => {
    if (event.target !== userMenuToggle && event.target !== userMenu) {
      if (userMenu) {
        userMenu.style.display = "none";
      }
    }
  };
});

document.addEventListener("DOMContentLoaded", () => {
  const modal = document.getElementById("login-modal");
  const btn = document.getElementById("login-button");
  const span = document.querySelector(".close");

  if (btn instanceof HTMLElement) {
    btn.onclick = () => {
      if (modal) {
        modal.style.display = "block";
      }
    };
  }

  if (span) {
    span.addEventListener("click", () => {
      if (modal) {
        modal.style.display = "none";
      }
    });
  }

  window.onclick = (event) => {
    if (event.target === modal) {
      if (modal) {
        modal.style.display = "none";
      }
    }
  };
});

document.addEventListener("DOMContentLoaded", () => {
  const loginButton = document.getElementById("login-button");
  const loginModal = document.getElementById("login-modal");
  const closeModal = document.querySelector(".close");
  const loginForm = document.getElementById("login-form");
  const signUpLink = document.getElementById("sign-up-link");

  if (loginButton instanceof HTMLElement) {
    loginButton.addEventListener("click", () => {
      if (loginModal) {
        loginModal.style.display = "block";
      }
    });
  }

  if (closeModal) {
    closeModal.addEventListener("click", () => {
      if (loginModal) {
        loginModal.style.display = "none";
      }
    });
  }

  window.addEventListener("click", (event) => {
    if (event.target === loginModal) {
      if (loginModal) {
        loginModal.style.display = "none";
      }
    }
  });

  if (signUpLink) {
    signUpLink.addEventListener("click", () => {
      window.location.href = "/crear-cuenta";
    });
  }

  if (loginForm instanceof HTMLFormElement) {
    loginForm.addEventListener("submit", async (event) => {
      event.preventDefault();

      const formData = new FormData(loginForm);
      const email = formData.get("email");
      const password = formData.get("password");

      try {
        const response = await fetch("/api/login", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ email, password }),
        });

        if (response.ok) {
          const data = await response.json();
          alert("Inicio de sesión exitoso");
          if (loginModal) {
            loginModal.style.display = "none";
          }
          window.location.reload(); // Recargar la página para actualizar el estado de la sesión
        } else {
          const error = await response.json();
          alert(`Error: ${error.message}`);
        }
      } catch (error) {
        if (error instanceof Error) {
          alert(`Error: ${error.message}`);
        } else {
          alert(`Error: ${error}`);
        }
      }
    });
  }
});

</script>
